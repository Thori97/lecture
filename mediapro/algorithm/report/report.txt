アルゴリズムレポート
電子情報工学科 03-190449 堀紡希
作成したプログラムはSA-ISアルゴリズムで接尾辞配列(suffix array)を作って、その接尾辞配列から得られる高さ配列(long common prefix)
の最大値が求める数字になるという性質から得られたものである。
基本的にはコマンドライン引数から得られたファイル名からSにスペースを除いて文字を取り込み、接尾辞配列をsaに格納し、
SA_IS関数によりO(n)で接尾辞配列が構築される。saに接尾辞配列が入るとmakelcp関数により高さ配列が得られる。その高さの最大値と、その時の接尾辞を与えたindex
を答えとして標準出力に出力する。計算手順としてはSA-IS法では接尾辞をそれ自身と比較して１文字後ろの接尾辞との大小で
L型とS型に分けてそれぞれを別々で並べて、S型の接尾辞で一つ左がL型であるものをLMSと呼ぶが、詳細は省くがそのLMSたちを再帰的にソートすることで、
高速な接尾辞配列構築を実現している。
100Mだとintではindexがオーバーフローするのではと考えすべてlongにしたがintのままでも計算できたと思われる。
lpc関数では接尾辞配列で隣り合っている（後ろの）接尾辞との共通文字数がたかだか１文字であることを利用して、これもまたO(n)で計算しているので
トータルで線形時間で計算できている。
このアルゴリズムを使ったのははじめに考えた単純に頭から比較していくやり方ではO(n^2)かかり、100M文字ではとても時間がかかる。
また接尾辞配列を用いても普通にソートしていてはソート自体がnlognであるので少し遅くなる(n(logn)^2)らしいので
高速で計算できるこのアルゴリズムを探し実装した。
参考資料
https://www.researchgate.net/publication/224176324_Two_Efficient_Algorithms_for_Linear_Time_Suffix_Array_Construction
https://mametter.hatenablog.com/entry/20180130/p1